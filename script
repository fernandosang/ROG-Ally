import requests
import json
import win32api

# GitHub repository information
repository_url = "https://api.github.com/repos/fernandosang/ROG-Ally"
access_token = "ghp_V5Fl3OMhlr6kbSSF2Dw6DFNj9UqHMR3rvFf"

# Function to get available storage information
def get_available_storage():
    drives = win32api.GetLogicalDriveStrings()
    drives = drives.split('\0')[:-1]

    storage_info = {}
    for drive in drives:
        try:
            total_bytes, used_bytes, free_bytes = win32api.GetDiskFreeSpaceEx(drive)
            storage_info[drive] = {
                "total": free_bytes + used_bytes,
                "used": used_bytes,
                "free": free_bytes
            }
        except Exception as e:
            print(f"Error getting information for drive {drive}: {e}")

    return storage_info

# Function to update JSON file and commit to GitHub
def update_json_file(storage_info):
    headers = {
        "Authorization": f"Bearer {access_token}"
    }

    # Get the latest commit SHA
    response = requests.get(repository_url + "/commits/latest", headers=headers)
    if response.status_code == 200:
        latest_commit_sha = response.json()["sha"]
    else:
        print(f"Error getting latest commit SHA: {response.text}")
        return

    # Update the JSON file
    update_url = repository_url + "/contents/storage_info.json"
    data = {
        "message": "Updated storage information",
        "content": json.dumps(storage_info).encode("utf-8").decode("unicode_escape"),
        "sha": latest_commit_sha
    }
    response = requests.put(update_url, headers=headers, json=data)
    if response.status_code == 200:
        print("JSON file updated and committed successfully")
    else:
        print(f"Error updating JSON file: {response.text}")

# Main execution
if __name__ == "__main__":
    storage_info = get_available_storage()
    update_json_file(storage_info)
